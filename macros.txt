;= script commands
alias=notepad %aliaspath%\init.cmd
setup=notepad %aliaspath%\init.cmd
macro=notepad %aliaspath%\macros.txt
macros=notepad %aliaspath%\macros.txt
em=notepad %aliaspath%\macros.txt
private=notepad %aliaspath%\private_macros.txt
pm=notepad %aliaspath%\private_macros.txt

;= macro commands
list_macros=type %aliaspath%\macros.txt
lm=type %aliaspath%\macros.txt
listmacros=type %aliaspath%\macros.txt

rlm=(echo RELOADING MACROS...) & (if exist %aliaspath%\macros.txt (echo loading global macros... & doskey /MACROFILE=%aliaspath%\macros.txt)) & (if exist %aliaspath%\private_macros.txt (echo loading private macros... & doskey /MACROFILE=%aliaspath%\private_macros.txt)) & (echo done.)

;= time / benchmarking
now=(echo:|date|find "current") & (echo:|time|find "current")
bench=(echo:|time|find "current") & $* & (echo:|time|find "current")

;= commands to exit console
xxx=del %aliaspath%\last_dir.txt & exit
xx=echo %cd%>%aliaspath%\last_dir.txt & exit
x=exit

;= removing files / directories
rmrf=rmdir /q /s $*
rmd=rmdir /s $*
rm=del $*

;= usability commands
cdd=cd /d $*
cdm=(md $*) & (cd /d $*)
cp=copy $*
ls=dir $*
ll=dir /b $*
xc=xcopy /C /R /E /Y $* 1>xcopy_file_log.txt 2>xcopy_error_log.txt
get=copy $* %aliaspath%

;= marking directories / jumping to marked directories
mark=set "mark_dir_$1=%cd%" & set mark_dir_>%aliaspath%\marks.txt
jump=set "mark_dir_jumpback=%cd%" & cd /d "%mark_dir_$1%"
j=set "mark_dir_jumpback=%cd%" & cd /d "%mark_dir_$1%"
jj=set "mark_dir_jumpback=%cd%" & cd /d "%mark_dir_jumpback%"

home=set back_dir=%cd% & cd /d %aliaspath%
back=cd /d %back_dir%

;= list marked dirs
marks=type %aliaspath%\marks.txt
marked=type %aliaspath%\marks.txt

;= open explorer at current location
here=explorer %cd%

;= navigation
up=cd..
..=cd..
...=cd..\..
....=cd..\..\..
.....=cd..\..\..\..
......=cd..\..\..\..\..
.......=cd..\..\..\..\..\..

;= processes
pkill=taskkill /f /im $*

;= script wrappers
loop=function_loop.cmd $*
dloop=function_dloop.cmd $*
floop=function_floop.cmd $*
lloop=function_lloop.cmd $*
rloop=function_rloop.cmd $*
elevate=function_elevate.cmd
status=function_check_elevation.cmd

;= power management
advboot=function_shutdown.cmd adv $*
bios=function_shutdown.cmd uefi $*
uefi=function_shutdown.cmd uefi $*
reboot=function_shutdown.cmd reboot $*
off=function_shutdown.cmd off $*
hib=function_shutdown.cmd hib $*
sleep=function_shutdown.cmd zzz $*
zzz=function_shutdown.cmd zzz $*
abort=function_shutdown.cmd abort $*
dontshutdown=function_shutdown.cmd abort $*
keepon=function_shutdown.cmd abort $*

;= program shortcuts
edit=notepad $*
py=python $*
ju=julia $*
ju7=c:\education\julia-0.7.0\bin\julia $*
c=julia -E "$*"
st=sublime_text $*
sb=sublime_text $*

;= network commands
setip=set stdip=$*
setmask=set stdmask=$*
setrouter=set stdrtr=$*

dhcp=netsh interface ip set address name=%ethname% dhcp
static=netsh interface ip set address name=%ethname% static %stdip% %stdmask%
staticr=netsh interface ip set address name=%ethname% static %stdip% %stdmask% %stdrtr%

ip=ipconfig | find "IPv4"

;= git (cmd-config maintenance)
gp=cd /d %aliaspath% & git pull & cd /d %cd%
gup=cd /d %aliaspath% & git commit -a -m "called update macro `gup` from command line" & git push & cd /d %cd%

;= Computer convenience
req=powercfg /requests
reqs=powercfg /requests
lastwake=powercfg /lastwake
lw=powercfg /lastwake

screenon=powercfg /change monitor-timeout-ac 0
screenoff=powercfg /change monitor-timeout-ac 15

;= night 1 = 80% night light, night 0 = 30% night light
night=powershell -Command "& {$env:Path = '%PATH%'; . nightlight.ps1; nightlight -Enabled $*}"